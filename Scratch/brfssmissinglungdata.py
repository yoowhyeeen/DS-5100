# -*- coding: utf-8 -*-
"""BRFSSmissingLungdata.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IchPgetHwGUdtvw3FSxXNr68YEBDzZH4
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import seaborn as sns

import matplotlib.pyplot as plt
import matplotlib.mlab as mlab
import matplotlib
plt.style.use('ggplot')
from matplotlib.pyplot import figure

# %matplotlib inline
matplotlib.rcParams['figure.figsize'] = (12,8)

pd.options.mode.chained_assignment = None

from google.colab import drive
drive.mount('/content/drive')

cdc = pd.read_csv('/content/drive/MyDrive/brfss2020.csv')

print(cdc.head(20))

# Variables to explore
cancer_vars = ['_SEX', '_AGEG5YR', '_EDUCAG', 'MARITAL', 'EMPLOY1', '_INCOMG', 
               'DECIDE', 'DIFFWALK', 'DIFFALON', '_RACEPRV', 'MENTHLTH', 
               'PHYSHLTH', 'POORHLTH','CSRVSUM', 'CSRVRTRN', 'CSRVINSR', 
               'CSRVPAIN']

# Subsetting cancer types
cancerType = cdc.loc[cdc.CNCRTYP1.notnull()]

# Proportion of people who have cancer
(len(cancerType)/len(cdc))*100

# Subetting for lung cancer
lungCancer = cancerType[cancerType.CNCRTYP1 == 24]

# Matches no. in codebook
lungCancer

lungCancer = lungCancer[cancer_vars]

lungCancer.head()

cols = lungCancer.columns # first 30 columns
colours = ['#000099', '#ffff00'] # specify the colours - yellow is missing. blue is not missing.
sns.heatmap(lungCancer[cols].isnull(), cmap=sns.color_palette(colours))

for col in lungCancer.columns:
    pct_missing = np.mean(lungCancer[col].isnull())
    print('{} - {}%'.format(col, round(pct_missing*100,3)))

lungCancer_Ok_csrvsum = lungCancer.loc[(~lungCancer['CSRVSUM'].isnull())]

lungCancer_Ok_csrvsum.shape

lungCancer_Ok_csrvsum.head()

cols = lungCancer_Ok_csrvsum.columns # first 30 columns
colours = ['#000099', '#ffff00'] # specify the colours - yellow is missing. blue is not missing.
sns.heatmap(lungCancer_Ok_csrvsum[cols].isnull(), cmap=sns.color_palette(colours))

for col in lungCancer_Ok_csrvsum.columns:
    pct_missing = np.mean(lungCancer_Ok_csrvsum[col].isnull())
    print('{} - {}%'.format(col, round(pct_missing*100,3)))

lungCancer_Ok_csrvrtrn = lungCancer.loc[(~lungCancer['CSRVRTRN'].isnull())]
lungCancer_Ok_csrvrtrn.shape

cols = lungCancer_Ok_csrvrtrn.columns # first 30 columns
colours = ['#000099', '#ffff00'] # specify the colours - yellow is missing. blue is not missing.
sns.heatmap(lungCancer_Ok_csrvrtrn[cols].isnull(), cmap=sns.color_palette(colours))

for col in lungCancer_Ok_csrvrtrn.columns:
    pct_missing = np.mean(lungCancer_Ok_csrvrtrn[col].isnull())
    print('{} - {}%'.format(col, round(pct_missing*100,3)))

lungCancer_Ok_csrvinsr = lungCancer.loc[(~lungCancer['CSRVINSR'].isnull())]
lungCancer_Ok_csrvinsr.shape

cols = lungCancer_Ok_csrvinsr.columns # first 30 columns
colours = ['#000099', '#ffff00'] # specify the colours - yellow is missing. blue is not missing.
sns.heatmap(lungCancer_Ok_csrvinsr[cols].isnull(), cmap=sns.color_palette(colours))

for col in lungCancer_Ok_csrvinsr.columns:
    pct_missing = np.mean(lungCancer_Ok_csrvinsr[col].isnull())
    print('{} - {}%'.format(col, round(pct_missing*100,3)))

lungCancer_Ok_csrvpain = lungCancer.loc[(~lungCancer['CSRVPAIN'].isnull())]
lungCancer_Ok_csrvpain.shape

cols = lungCancer_Ok_csrvpain.columns # first 30 columns
colours = ['#000099', '#ffff00'] # specify the colours - yellow is missing. blue is not missing.
sns.heatmap(lungCancer_Ok_csrvpain[cols].isnull(), cmap=sns.color_palette(colours))

for col in lungCancer_Ok_csrvpain.columns:
    pct_missing = np.mean(lungCancer_Ok_csrvpain[col].isnull())
    print('{} - {}%'.format(col, round(pct_missing*100,3)))

drive.flush_and_unmount()